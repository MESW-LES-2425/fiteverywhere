name: CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      SSH_KEY: ${{ github.ref_name == 'main' && secrets.SSH_PRIVATE_KEY || secrets.SSH_PRIVATE_KEY_DEV }}
      SERVER_NAME: ${{ github.ref_name == 'main' && 'http://fiteverywhere.me' || 'http://dev.fiteverywhere.me' }}
      SERVER_USER: ${{ github.ref_name == 'main' && 'fiteverywhereroot' || 'fiteverywheredevuser' }}
      SERVER_IP: ${{ github.ref_name == 'main' && '4.210.226.23' || '20.56.8.144' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ env.SSH_KEY }}

      - name: Clean and Copy files to Azure VM
        run: |
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "rm -rf ~/FitEverywhere-T2E/*"
          scp -r -o StrictHostKeyChecking=no * $SERVER_USER@$SERVER_IP:~/FitEverywhere-T2E

      - name: SSH into VM and deploy
        run: |
          ssh -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP << 'EOF'
          
            cd ~/FitEverywhere-T2E
            echo "SERVER_NAME=$SERVER_NAME" > .env
            sudo docker stop $(sudo docker ps -a -q)      # Stop previous containers if any
            sudo docker rm $(sudo docker ps -a -q)        # Remove previous containers if any
            sudo docker rmi $(sudo docker images -a -q)
            docker compose -f docker-compose.yml up -d     # Start new containers
          EOF
