name: CD

concurrency:
  group: ${{ github.ref_name == 'main' && 'production' || 'staging' }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name == 'main' && 'production' || 'staging' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Clean and Copy files to Azure VM
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_IP }} "rm -rf ~/FitEverywhere-T2E/*"
          scp -r -o StrictHostKeyChecking=no * ${{ vars.SERVER_USER }}@${{ vars.SERVER_IP }}:~/FitEverywhere-T2E

      - name: SSH into VM and deploy
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.SERVER_USER }}@${{ vars.SERVER_IP }} << 'EOF'
          
            cd ~/FitEverywhere-T2E
            echo "SERVER_NAME=${{ vars.SERVER_NAME }}" > .env
            sudo docker stop $(sudo docker ps -a -q)      # Stop previous containers if any
            sudo docker rm $(sudo docker ps -a -q)        # Remove previous containers if any
            sudo docker rmi $(sudo docker images -a -q)
            sudo docker compose -f docker-compose.yml up -d     # Start new containers
          EOF
