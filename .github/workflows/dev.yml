name: CI/CD for development

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18 ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
        working-directory: ./frontend

      - name: Code Linting
        run: npm run lint
        working-directory: ./frontend

      - name: Coding Style Check
        run: npm run style-check
        working-directory: ./frontend

      - name: Build the project
        run: npm run build
        working-directory: ./frontend

  backend:
    runs-on: ubuntu-latest
    env:
      SPRING_DATASOURCE_URL: jdbc:mysql://fiteverywhere-db.mysql.database.azure.com:3306/fiteverywhere_db?serverTimezone=UTC&useSSL=true&requireSSL=false
      SPRING_DATASOURCE_USERNAME: user_fiteverywhere
      SPRING_DATASOURCE_PASSWORD: F1t3v3rywh3r3.
      SERVER_NAME: http://dev.fiteverywhere.me

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Clean and Compile with Maven
        run: mvn clean compile
        working-directory: ./backend

      - name: Run Backend Tests with Coverage
        run: mvn test jacoco:report
        working-directory: ./backend

  deploy:
    runs-on: ubuntu-latest
    needs: [ backend, frontend ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_DEV }}

      - name: Clean and Copy files to Azure VM
        run: |
          ssh -o StrictHostKeyChecking=no fiteverywheredevuser@20.56.8.144 "rm -rf ~/FitEverywhere-T2E/*"
          scp -r -o StrictHostKeyChecking=no * fiteverywheredevuser@20.56.8.144:~/FitEverywhere-T2E

      - name: SSH into VM and deploy
        run: |
          ssh -o StrictHostKeyChecking=no fiteverywheredevuser@20.56.8.144 << 'EOF'
          
            cd ~/FitEverywhere-T2E
            sudo docker stop $(docker ps -a -q)      # Stop previous containers if any
            sudo docker rm $(docker ps -a -q)        # Remove previous containers if any
            sudo docker rmi $(sudo docker images -a -q)
            sudo docker compose up -d     # Start new containers
          EOF
